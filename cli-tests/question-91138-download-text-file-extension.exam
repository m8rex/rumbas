// Numbas version: exam_results_page_options
{"name": "Download text file extension", "extensions": ["download-text-file"], "custom_part_types": [], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "question_groups": [{"pickingStrategy": "all-ordered", "questions": [{"name": "Download text file extension", "tags": [], "metadata": {"description": "<p>This question demonstrates how to use the \"Download a text file\" extension to create a link to download a file containing text created from question variables.</p>", "licence": "Creative Commons Attribution 4.0 International"}, "statement": "<p>The \"download a file\" extension makes it easy to provide a text file that the student should download.</p>\n<p>It provides a function <code>download_link(filename, content, link_text)</code>. If you don't give <code>link_text</code>, the link reads \"Download <code>filename</code>\".</p>", "advice": "", "rulesets": {}, "extensions": ["download-text-file"], "variables": {"xs": {"name": "xs", "group": "Ungrouped variables", "definition": "repeat(random(1..100),n)", "description": "", "templateType": "anything"}, "ys": {"name": "ys", "group": "Ungrouped variables", "definition": "repeat(random(-200..100#0),n)", "description": "", "templateType": "anything"}, "n": {"name": "n", "group": "Ungrouped variables", "definition": "10", "description": "", "templateType": "anything"}, "letters": {"name": "letters", "group": "Ungrouped variables", "definition": "repeat(random(split(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"\")),n)", "description": "", "templateType": "anything"}, "with_commas": {"name": "with_commas", "group": "Ungrouped variables", "definition": "repeat(random(1..10)+\",\"+random(11..20),n)", "description": "", "templateType": "anything"}, "with_quotes": {"name": "with_quotes", "group": "Ungrouped variables", "definition": "map('\"{x}\"',x,letters)", "description": "", "templateType": "anything"}, "table_x_y_letter": {"name": "table_x_y_letter", "group": "Ungrouped variables", "definition": "table(zip(xs,ys,letters),[\"$X$\",\"$Y$\",\"Letter\"])", "description": "", "templateType": "anything"}, "x_y_letter_csv": {"name": "x_y_letter_csv", "group": "Ungrouped variables", "definition": "csv(zip(xs,ys,letters),[\"X\",\"Y\",\"Letter\"])", "description": "", "templateType": "anything"}, "list_of_dicts": {"name": "list_of_dicts", "group": "Ungrouped variables", "definition": "repeat(\n  [\n    \"word\": join(repeat(random(split(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"\")),5),\"\"),\n    \"frequency\": random(1..99)\n  ],\n  n\n)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["n", "xs", "ys", "letters", "with_commas", "with_quotes", "table_x_y_letter", "x_y_letter_csv", "list_of_dicts"], "variable_groups": [], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "information", "useCustomName": true, "customName": "Text files", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Here's a text file containing the text \"Hello there\": {download_link(\"hi.txt\",\"Hello there\")}.</p>\n<p>Here's the same file, but with different link text: {download_link(\"hi.txt\",\"Hello there\",\"Your very own hello file\")}.</p>\n<p>And here's a text file containing a list of numbers, one on each line: {download_link(\"numbers.txt\",join(xs,\"\\n\"))}.</p>"}, {"type": "information", "useCustomName": true, "customName": "CSV files", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>The extension also provides a function <code>csv(rows,headers)</code>. <code>rows</code> should be a list of lists of values. <code>headers</code> is an optional list of strings to put above the first row.</p>\n<p>Here's a table of data:</p>\n<p>{table_x_y_letter}</p>\n<p>As a CSV file, it looks like this:</p>\n<pre>{x_y_letter_csv}</pre>\n<p>{download_link(\"x-y-a.csv\",x_y_letter_csv)}</p>\n<p>Here's a CSV file with commas and quote characters in the entries, that are automatically escaped for you:</p>\n<pre>{csv(zip(with_commas,with_quotes))}</pre>\n<p>{download_link(\"with-weird-characters.csv\",csv(zip(with_commas,with_quotes)))}</p>\n<p>Or you can give a dictionary, mapping headers to columns:</p>\n<pre>{csv([\"X\":xs,\"Y\":ys,\"weird data with commas\":with_commas])}</pre>\n<p>{download_link(\"from-dictionary.csv\",csv([\"X\":xs,\"Y\":ys,\"weird data with commas\":with_commas]))}</p>\n<p>Or you can give a list of dictionaries. There's a column for each distinct key in the dictionaries.</p>\n<pre>{csv(list_of_dicts)}</pre>\n<p>{download_link(\"from-dictionary.csv\",csv(list_of_dicts))}</p>"}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always", "contributors": [{"name": "Christian Lawson-Perfect", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/7/"}]}]}], "contributors": [{"name": "Christian Lawson-Perfect", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/7/"}]}