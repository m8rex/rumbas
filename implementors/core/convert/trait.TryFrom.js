(function() {var implementors = {};
implementors["rumbas"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"rumbas/exam/question_group/struct.QuestionPath.html\" title=\"struct rumbas::exam::question_group::QuestionPath\">QuestionPath</a>","synthetic":false,"types":["rumbas::exam::question_group::QuestionPath"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"rumbas/question/custom_part_type/struct.CustomPartTypeDefinitionPath.html\" title=\"struct rumbas::question::custom_part_type::CustomPartTypeDefinitionPath\">CustomPartTypeDefinitionPath</a>","synthetic":false,"types":["rumbas::question::custom_part_type::CustomPartTypeDefinitionPath"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"rumbas/question/resource/struct.ResourcePath.html\" title=\"struct rumbas::question::resource::ResourcePath\">ResourcePath</a>","synthetic":false,"types":["rumbas::question::resource::ResourcePath"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"rumbas/support/template/struct.TemplateString.html\" title=\"struct rumbas::support::template::TemplateString\">TemplateString</a>","synthetic":false,"types":["rumbas::support::template::TemplateString"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()