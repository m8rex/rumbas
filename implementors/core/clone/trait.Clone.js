(function() {var implementors = {};
implementors["rumbas"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Noneable&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPart","synthetic":false,"types":[]},{"text":"impl Clone for VariableReplacementStrategy","synthetic":false,"types":[]},{"text":"impl Clone for Exam","synthetic":false,"types":[]},{"text":"impl Clone for Extensions","synthetic":false,"types":[]},{"text":"impl Clone for Feedback","synthetic":false,"types":[]},{"text":"impl Clone for Review","synthetic":false,"types":[]},{"text":"impl Clone for FeedbackMessage","synthetic":false,"types":[]},{"text":"impl Clone for FileString","synthetic":false,"types":[]},{"text":"impl Clone for Function","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartGapFill","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartInformation","synthetic":false,"types":[]},{"text":"impl Clone for InputString","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartJME","synthetic":false,"types":[]},{"text":"impl Clone for JMEAnswerSimplification","synthetic":false,"types":[]},{"text":"impl Clone for CheckingType","synthetic":false,"types":[]},{"text":"impl Clone for JMERestriction","synthetic":false,"types":[]},{"text":"impl Clone for JMELengthRestriction","synthetic":false,"types":[]},{"text":"impl Clone for JMEStringRestriction","synthetic":false,"types":[]},{"text":"impl Clone for JMEPatternRestriction","synthetic":false,"types":[]},{"text":"impl Clone for JMEValueGenerator","synthetic":false,"types":[]},{"text":"impl Clone for Locale","synthetic":false,"types":[]},{"text":"impl Clone for SupportedLocale","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartChooseOne","synthetic":false,"types":[]},{"text":"impl Clone for ChooseOneDisplay","synthetic":false,"types":[]},{"text":"impl Clone for MultipleChoiceAnswer","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartChooseMultiple","synthetic":false,"types":[]},{"text":"impl Clone for MatchAnswersItemMarks","synthetic":false,"types":[]},{"text":"impl Clone for MatchAnswersItem","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartMatchAnswersWithItems","synthetic":false,"types":[]},{"text":"impl Clone for MatchAnswerWithItemsDisplay","synthetic":false,"types":[]},{"text":"impl Clone for Navigation","synthetic":false,"types":[]},{"text":"impl Clone for ShowResultsPage","synthetic":false,"types":[]},{"text":"impl Clone for LeaveAction","synthetic":false,"types":[]},{"text":"impl Clone for QuestionNavigation","synthetic":false,"types":[]},{"text":"impl Clone for NumbasSettings","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartNumberEntry","synthetic":false,"types":[]},{"text":"impl Clone for NumberEntryAnswer","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPartPatternMatch","synthetic":false,"types":[]},{"text":"impl Clone for Preamble","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for VariablesTest","synthetic":false,"types":[]},{"text":"impl Clone for QuestionGroup","synthetic":false,"types":[]},{"text":"impl Clone for PickingStrategy","synthetic":false,"types":[]},{"text":"impl Clone for QuestionPath","synthetic":false,"types":[]},{"text":"impl Clone for TemplateString","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ValueType&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Value&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Timing","synthetic":false,"types":[]},{"text":"impl Clone for TimeoutAction","synthetic":false,"types":[]},{"text":"impl Clone for TranslatableString","synthetic":false,"types":[]},{"text":"impl Clone for Variable","synthetic":false,"types":[]},{"text":"impl Clone for VariableTemplateType","synthetic":false,"types":[]},{"text":"impl Clone for VariableRepresentation","synthetic":false,"types":[]},{"text":"impl Clone for VariableStringRepresentation","synthetic":false,"types":[]},{"text":"impl Clone for RangeData","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()